version: 3

# Taskfile principal - T√¢ches globales et inclusions
# Charge automatiquement les variables depuis le fichier .env s'il existe
dotenv: [ '.env' ]

includes:
  docker: ./taskfiles/docker/Taskfile.yml
  utils: ./taskfiles/utils/Taskfile.yml
  env: ./taskfiles/env/Taskfile.yml
  nodejs: ./taskfiles/nodejs/Taskfile.yml
  download: ./taskfiles/download/Taskfile.yml

vars:
  # Variables avec valeurs par d√©faut depuis .env ou valeurs de fallback
  PROJECT_NAME: '{{.PROJECT_NAME | default "taskfiles-collection"}}'
  PROJECT_VERSION: '1.0.0'
  ENVIRONMENT: '{{.ENVIRONMENT | default "development"}}'
  SWARM_DEFAULT_ADDR_POOL: '{{.IPSWARM | default "10.20.0.0/16"}}'
  SWARM_ADVERTISE_ADDR: '{{.ADVERTISEADDR | default "192.168.1.46"}}'
  STACK_NAME: '{{.STACK | default "labstag"}}'
  FOLDERSQL: '{{.FOLDERSQL | default "database_init"}}'
  FILESQL: '{{.FILESQL | default "dump.sql"}}'
  FOLDERlabstag: '{{.FOLDERLAMY | default "labstag"}}'

tasks:
  default:
    desc: "Affiche l'aide et les t√¢ches disponibles"
    silent: true
    cmds:
    - echo "üõ†Ô∏è  Collection de Taskfiles pour le d√©veloppement"
    - echo ""
    - echo "T√¢ches globales disponibles :"
    - task --list
    - echo ""

  info:
    desc: "Affiche les informations du projet avec les variables d'environnement"
    silent: true
    cmds:
    - |
      echo "üõ†Ô∏è  {{.PROJECT_NAME}} v{{.PROJECT_VERSION}} - Collection de Taskfiles"
      echo "Environnement: {{.ENVIRONMENT}}"

  help:
    desc: "Affiche l'aide d√©taill√©e"
    aliases: [ h ]
    cmds:
    - task: default
  labstag:copysql:
    desc: "Copie le fichier SQL de dump dans le dossier labstag"
    silent: true
    cmds:
    - task: utils:file:copy
      vars:
        SOURCE: ./{{.FOLDERSQL}}/{{.FILESQL}}
        DESTINATION: ./{{.FOLDERlabstag}}/mariadb/{{.FILESQL}}

  labstag:getpull-image:
    desc: "T√©l√©charge les images Docker d√©finies dans le docker-compose.yml"
    silent: true
    cmds:
    - task: docker:images:pull
      vars:
        COMPOSE_FILE: ./docker-compose.yml ./docker-compose-hackariens.yml
  labstag:deploy:
    desc: "D√©ploie les stacks Docker d√©finies dans les fichiers docker-compose"
    silent: true
    cmds:
    - task: docker:stack:deploy
      vars:
        COMPOSE_FILE: ./docker-compose.yml ./docker-compose-hackariens.yml
        STACK_NAME: labstag
  labstag:install-first:
    desc: "Installation initiale de Composer et des d√©pendances"
    silent: true
    cmds:
    - docker run --rm -v $(pwd)/apps:/var/www -w /var/www koromerzhin/php:8.4.3-apache-symfony symfony composer install
  labstag:waiting:
    desc: "Attend que les services soient op√©rationnels"
    silent: true
    cmds:
    - task: docker:stack:check:containers:ready
      vars:
        CONTAINERS: "phpfpm"
        STACK_NAME: labstag
  labstag:ls:
    desc: "Liste les stacks et services Docker"
    silent: true
    cmds:
    - task: docker:stack:services
      vars:
        STACK_NAME: labstag
  labstag:exec:
    desc: "Ex√©cute une commande dans un conteneur en cours d'ex√©cution"
    cmds:
    - task: labstag:swarm-init
    - task: labstag:create-network
    - task: labstag:getpull-image
    - task: labstag:deploy
    - task: labstag:waiting
    - task: labstag:ls
